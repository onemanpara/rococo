plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.3'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'com.palantir.docker' version '0.35.0'
}

group = 'guru.qa'
version = '0.0.1-SNAPSHOT'

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation "org.springframework.boot:spring-boot-starter-thymeleaf"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation 'org.springframework.security:spring-security-oauth2-authorization-server:1.1.1'
    implementation "org.springframework.kafka:spring-kafka:${project.ext.spingKafkaVersion}"
    annotationProcessor "org.projectlombok:lombok:${project.ext.lombokVersion}"
    compileOnly "org.projectlombok:lombok:${project.ext.lombokVersion}"
    runtimeOnly "mysql:mysql-connector-java:${project.ext.mysqlConnectorVersion}"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

docker {
    dependsOn build
    name "onemanpara/rococo-auth:${project.version}"
    tag 'latest', 'onemanpara/rococo-auth:latest'
    files bootJar.archiveFile
    buildArgs([APP_VER: project.version, DOCKER: project.ext.dockerImage])
    noCache true
}

tasks.register('dockerRmi', Exec) {
    workingDir "${buildDir}"
    commandLine 'bash', '-c', "docker rmi -f \$(docker images | grep 'rococo')\n"
}


tasks.named('test') {
    useJUnitPlatform()
}


