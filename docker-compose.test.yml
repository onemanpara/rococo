version: '3.9'

services:
  rococo-all-db:
    container_name: rococo-all-db
    image: mysql:8.0.33
    environment:
      - MYSQL_ROOT_PASSWORD=secret
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin -uroot -psecret ping"]
      interval: 3s
      timeout: 3s
      retries: 10
    ports:
      - "3306:3306"
    restart: always
    networks:
      - test-network
    dns_search: .

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:7.3.2
    expose:
      - "2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    networks:
      - test-network
    dns_search: .

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:7.3.2
    expose:
      - "9092"
    depends_on:
      zookeeper:
        condition: service_started
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
    networks:
      - test-network
    dns_search: .

  auth.rococo.dc:
    container_name: auth.rococo.dc
    image: onemanpara/rococo-auth:latest
    ports:
      - "9000:9000"
    healthcheck:
      test: "wget --spider http://localhost:9000/actuator/health || exit 1"
      interval: 5s
      timeout: 5s
      retries: 10
    restart: always
    depends_on:
      rococo-all-db:
        condition: service_healthy
      kafka:
        condition: service_started
    networks:
      - test-network
    dns_search: .

  gateway.rococo.dc:
    container_name: gateway.rococo.dc
    image: onemanpara/rococo-gateway:latest
    ports:
      - "8090:8090"
    depends_on:
      auth.rococo.dc:
        condition: service_healthy
    networks:
      - test-network
    dns_search: .

  userdata.rococo.dc:
    container_name: userdata.rococo.dc
    image: onemanpara/rococo-userdata:latest
    expose:
      - "8091"
    restart: always
    depends_on:
      auth.rococo.dc:
        condition: service_healthy
    networks:
      - test-network
    dns_search: .

  artist.rococo.dc:
    container_name: artist.rococo.dc
    image: onemanpara/rococo-artist:latest
    expose:
      - "8092"
    restart: always
    depends_on:
      auth.rococo.dc:
        condition: service_healthy
    networks:
      - test-network
    dns_search: .

  museum.rococo.dc:
    container_name: museum.rococo.dc
    image: onemanpara/rococo-museum:latest
    expose:
      - "8093"
    restart: always
    depends_on:
      auth.rococo.dc:
        condition: service_healthy
    networks:
      - test-network
    dns_search: .

  geo.rococo.dc:
    container_name: geo.rococo.dc
    image: onemanpara/rococo-geo:latest
    expose:
      - "8094"
    restart: always
    depends_on:
      auth.rococo.dc:
        condition: service_healthy
    networks:
      - test-network
    dns_search: .

  painting.rococo.dc:
    container_name: painting.rococo.dc
    image: onemanpara/rococo-painting:latest
    expose:
      - "8095"
    restart: always
    depends_on:
      auth.rococo.dc:
        condition: service_healthy
    networks:
      - test-network
    dns_search: .

  client.rococo.dc:
    container_name: client.rococo.dc
    image: "${FRONT_IMAGE}"
    ports:
      - "80:80"
    restart: always
    depends_on:
      gateway.rococo.dc:
        condition: service_started
    networks:
      - test-network
    dns_search: .

  selenoid:
    container_name: selenoid
    image: aerokube/selenoid:1.11.0
    platform: "${ARCH}"
    volumes:
      - ./selenoid:/etc/selenoid
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    command: [ "-conf", "/etc/selenoid/browsers.json", "-limit", "4", "-video-output-dir", "/opt/selenoid/video", "-log-output-dir", "/opt/selenoid/logs", "-container-network", "rococo_test-network" ]
    ports:
      - "4444:4444"
    depends_on:
     client.rococo.dc:
       condition: service_started
    networks:
      - test-network
    dns_search: .

  selenoid-ui:
    container_name: selenoid-ui
    image: aerokube/selenoid-ui:1.10.10
    restart: unless-stopped
    ports:
      - "9090:8080"
    command: [ "--selenoid-uri", "http://selenoid:4444" ]
    depends_on:
      selenoid:
        condition: service_started
    networks:
      - test-network
    dns_search: .

  rococo-tests:
    container_name: rococo-tests
    image: onemanpara/rococo-tests
    depends_on:
      client.rococo.dc:
        condition: service_started
    networks:
      - test-network
    dns_search: .

  allure:
    container_name: allure
    image: frankescobar/allure-docker-service
    depends_on:
      - rococo-tests
    environment:
      CHECK_RESULTS_EVERY_SECONDS: 3
      KEEP_HISTORY: 0
    ports:
      - "5050:5050"
    networks:
      - test-network
    dns_search: .

networks:
  test-network:
    driver: bridge