buildscript {
    ext {
        protobufVersion = '3.21.12'
        grpcVersion = '1.52.1'
        allureVersion = '2.21.0'
        selenideVersion = '7.0.2'
    }
}

plugins {
    id 'java'
    id 'io.qameta.allure' version '2.11.2'
    id 'io.qameta.allure-adapter' version '2.11.2'
}

group 'guru.qa'
version '0.0.1-SNAPSHOT'

allure {
    version.set("${allureVersion}")
    adapter {
        aspectjVersion.set("1.9.19")
        autoconfigure.set(true)
        aspectjWeaver.set(true)
    }
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
    // REST
    testImplementation('com.squareup.retrofit2:retrofit:2.9.0') {
        exclude group: 'com.squareup.okhttp3'
        exclude group: 'com.squareup.okio'
    }
    testImplementation('com.squareup.retrofit2:converter-jackson:2.9.0') {
        exclude group: "com.squareup.retrofit2", module: "retrofit"
    }
    testImplementation('com.squareup.okhttp3:logging-interceptor:3.14.9') {
    }
    // DB
    testImplementation 'org.springframework:spring-jdbc:6.0.4'
    testImplementation 'mysql:mysql-connector-java:8.0.33'
    testImplementation 'p6spy:p6spy:3.9.1'
    testImplementation 'org.hibernate:hibernate-core:6.1.7.Final'
    testImplementation 'com.github.vertical-blank:sql-formatter:2.0.3'
    testImplementation 'org.springframework.security:spring-security-crypto:6.1.0'
    // Allure
    testImplementation "io.qameta.allure:allure-attachments:${allureVersion}"
    testImplementation("io.qameta.allure:allure-junit5:${allureVersion}") {
        exclude group: "org.junit.jupiter-api"
        exclude group: "org.junit.platform"
        exclude group: "org.junit.jupiter"
    }
    testImplementation("io.qameta.allure:allure-selenide:${allureVersion}") {
        exclude group: 'com.codeborne'
    }
    testImplementation("io.qameta.allure:allure-okhttp3:${allureVersion}") {
        exclude group: "io.qameta.allure", module: "allure-attachments"
        exclude group: "com.squareup.okhttp3"
    }
    testImplementation("io.qameta.allure:allure-grpc:${allureVersion}") {
        exclude group: "io.qameta.allure", module: "allure-attachments"
    }
    // WEB
    testImplementation "com.codeborne:selenide:${selenideVersion}"
    // Utils
    testImplementation 'com.github.javafaker:javafaker:1.0.2'
    testImplementation 'commons-io:commons-io:2.11.0'
    testImplementation 'com.google.code.findbugs:jsr305:3.0.2'
    // gRPC
    testImplementation "io.grpc:grpc-protobuf:${grpcVersion}"
    testImplementation "io.grpc:grpc-stub:${grpcVersion}"
    testImplementation "io.grpc:grpc-netty:${grpcVersion}"
    testImplementation "com.google.protobuf:protobuf-java:${protobufVersion}"
    testImplementation project(':rococo-grpc-common')
    compileOnly 'jakarta.annotation:jakarta.annotation-api:1.3.5' // Java 9+ compatibility - Do NOT update to 2.0.0
    // Lombok
    testAnnotationProcessor "org.projectlombok:lombok:${project.ext.lombokVersion}"
    testCompileOnly "org.projectlombok:lombok:${project.ext.lombokVersion}"
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    testLogging.showStandardStreams = true
    testLogging.exceptionFormat = 'full'
    useJUnitPlatform()
}
